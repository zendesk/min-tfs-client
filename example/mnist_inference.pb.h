/* Copyright 2016 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

// TODO(b/26692266): Automatically generate gRPC proto files.
// For now follow instructions in the bug.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mnist_inference.proto

#ifndef PROTOBUF_mnist_5finference_2eproto__INCLUDED
#define PROTOBUF_mnist_5finference_2eproto__INCLUDED

#ifndef PROTOBUF_INLINE_NOT_IN_HEADERS
#ifndef NDEBUG
#define PROTOBUF_INLINE_NOT_IN_HEADERS 1
#else
#define PROTOBUF_INLINE_NOT_IN_HEADERS 0
#endif  // !NDEBUG
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mnist_5finference_2eproto();
void protobuf_AssignDesc_mnist_5finference_2eproto();
void protobuf_ShutdownFile_mnist_5finference_2eproto();

class MnistRequest;
class MnistResponse;

// ===================================================================

class MnistRequest : public ::google::protobuf::Message {
 public:
  MnistRequest();
  virtual ~MnistRequest();

  MnistRequest(const MnistRequest& from);

  inline MnistRequest& operator=(const MnistRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MnistRequest& default_instance();

  void Swap(MnistRequest* other);

  // implements Message ----------------------------------------------

  inline MnistRequest* New() const { return New(NULL); }

  MnistRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MnistRequest& from);
  void MergeFrom(const MnistRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MnistRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float image_data = 1 [packed = true];
  int image_data_size() const;
  void clear_image_data();
  static const int kImageDataFieldNumber = 1;
  float image_data(int index) const;
  void set_image_data(int index, float value);
  void add_image_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      image_data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_image_data();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.MnistRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< float > image_data_;
  mutable int _image_data_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mnist_5finference_2eproto();
  friend void protobuf_AssignDesc_mnist_5finference_2eproto();
  friend void protobuf_ShutdownFile_mnist_5finference_2eproto();

  void InitAsDefaultInstance();
  static MnistRequest* default_instance_;
};
// -------------------------------------------------------------------

class MnistResponse : public ::google::protobuf::Message {
 public:
  MnistResponse();
  virtual ~MnistResponse();

  MnistResponse(const MnistResponse& from);

  inline MnistResponse& operator=(const MnistResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MnistResponse& default_instance();

  void Swap(MnistResponse* other);

  // implements Message ----------------------------------------------

  inline MnistResponse* New() const { return New(NULL); }

  MnistResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MnistResponse& from);
  void MergeFrom(const MnistResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MnistResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float value = 1 [packed = true];
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value(int index) const;
  void set_value(int index, float value);
  void add_value(float value);
  const ::google::protobuf::RepeatedField< float >&
      value() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.MnistResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< float > value_;
  mutable int _value_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mnist_5finference_2eproto();
  friend void protobuf_AssignDesc_mnist_5finference_2eproto();
  friend void protobuf_ShutdownFile_mnist_5finference_2eproto();

  void InitAsDefaultInstance();
  static MnistResponse* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MnistRequest

// repeated float image_data = 1 [packed = true];
inline int MnistRequest::image_data_size() const {
  return image_data_.size();
}
inline void MnistRequest::clear_image_data() {
  image_data_.Clear();
}
inline float MnistRequest::image_data(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.MnistRequest.image_data)
  return image_data_.Get(index);
}
inline void MnistRequest::set_image_data(int index, float value) {
  image_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.MnistRequest.image_data)
}
inline void MnistRequest::add_image_data(float value) {
  image_data_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.serving.MnistRequest.image_data)
}
inline const ::google::protobuf::RepeatedField< float >&
MnistRequest::image_data() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.MnistRequest.image_data)
  return image_data_;
}
inline ::google::protobuf::RepeatedField< float >*
MnistRequest::mutable_image_data() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.MnistRequest.image_data)
  return &image_data_;
}

// -------------------------------------------------------------------

// MnistResponse

// repeated float value = 1 [packed = true];
inline int MnistResponse::value_size() const {
  return value_.size();
}
inline void MnistResponse::clear_value() {
  value_.Clear();
}
inline float MnistResponse::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.MnistResponse.value)
  return value_.Get(index);
}
inline void MnistResponse::set_value(int index, float value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.MnistResponse.value)
}
inline void MnistResponse::add_value(float value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.serving.MnistResponse.value)
}
inline const ::google::protobuf::RepeatedField< float >&
MnistResponse::value() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.MnistResponse.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< float >*
MnistResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.MnistResponse.value)
  return &value_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mnist_5finference_2eproto__INCLUDED
